{"version":3,"file":"static/js/1.a89740cb.chunk.js","mappings":"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","sources":["../node_modules/@ledgerhq/devices/src/hid-framing.ts","../node_modules/@ledgerhq/devices/node_modules/semver/classes/comparator.js","../node_modules/@ledgerhq/devices/node_modules/semver/classes/range.js","../node_modules/@ledgerhq/devices/node_modules/semver/classes/semver.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/clean.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/cmp.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/coerce.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/compare-build.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/compare-loose.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/compare.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/diff.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/eq.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/gt.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/gte.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/inc.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/lt.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/lte.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/major.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/minor.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/neq.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/parse.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/patch.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/prerelease.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/rcompare.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/rsort.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/satisfies.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/sort.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/valid.js","../node_modules/@ledgerhq/devices/node_modules/semver/index.js","../node_modules/@ledgerhq/devices/node_modules/semver/internal/constants.js","../node_modules/@ledgerhq/devices/node_modules/semver/internal/debug.js","../node_modules/@ledgerhq/devices/node_modules/semver/internal/identifiers.js","../node_modules/@ledgerhq/devices/node_modules/semver/internal/parse-options.js","../node_modules/@ledgerhq/devices/node_modules/semver/internal/re.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/gtr.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/intersects.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/ltr.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/max-satisfying.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/min-satisfying.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/min-version.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/outside.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/simplify.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/subset.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/to-comparators.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/valid.js","../node_modules/@ledgerhq/devices/src/index.ts","../node_modules/@ledgerhq/hw-transport-webhid/node_modules/@ledgerhq/hw-transport/src/Transport.ts","../node_modules/@ledgerhq/logs/src/index.ts","../node_modules/@ledgerhq/hw-transport-webhid/src/TransportWebHID.ts","../node_modules/lru-cache/index.js","../node_modules/yallist/iterator.js","../node_modules/yallist/yallist.js"],"sourcesContent":["import { TransportError } from \"@ledgerhq/errors\";\nexport type ResponseAcc =\n  | {\n      data: Buffer;\n      dataLength: number;\n      sequence: number;\n    }\n  | null\n  | undefined;\nconst Tag = 0x05;\n\nfunction asUInt16BE(value) {\n  const b = Buffer.alloc(2);\n  b.writeUInt16BE(value, 0);\n  return b;\n}\n\nconst initialAcc = {\n  data: Buffer.alloc(0),\n  dataLength: 0,\n  sequence: 0,\n};\n\n/**\n *\n */\nconst createHIDframing = (channel: number, packetSize: number) => {\n  return {\n    makeBlocks(apdu: Buffer): Buffer[] {\n      let data = Buffer.concat([asUInt16BE(apdu.length), apdu]);\n      const blockSize = packetSize - 5;\n      const nbBlocks = Math.ceil(data.length / blockSize);\n      data = Buffer.concat([\n        data, // fill data with padding\n        Buffer.alloc(nbBlocks * blockSize - data.length + 1).fill(0),\n      ]);\n      const blocks: Buffer[] = [];\n\n      for (let i = 0; i < nbBlocks; i++) {\n        const head = Buffer.alloc(5);\n        head.writeUInt16BE(channel, 0);\n        head.writeUInt8(Tag, 2);\n        head.writeUInt16BE(i, 3);\n        const chunk = data.slice(i * blockSize, (i + 1) * blockSize);\n        blocks.push(Buffer.concat([head, chunk]));\n      }\n\n      return blocks;\n    },\n\n    reduceResponse(acc: ResponseAcc, chunk: Buffer): ResponseAcc {\n      let { data, dataLength, sequence } = acc || initialAcc;\n\n      if (chunk.readUInt16BE(0) !== channel) {\n        throw new TransportError(\"Invalid channel\", \"InvalidChannel\");\n      }\n\n      if (chunk.readUInt8(2) !== Tag) {\n        throw new TransportError(\"Invalid tag\", \"InvalidTag\");\n      }\n\n      if (chunk.readUInt16BE(3) !== sequence) {\n        throw new TransportError(\"Invalid sequence\", \"InvalidSequence\");\n      }\n\n      if (!acc) {\n        dataLength = chunk.readUInt16BE(5);\n      }\n\n      sequence++;\n      const chunkData = chunk.slice(acc ? 5 : 7);\n      data = Buffer.concat([data, chunkData]);\n\n      if (data.length > dataLength) {\n        data = data.slice(0, dataLength);\n      }\n\n      return {\n        data,\n        dataLength,\n        sequence,\n      };\n    },\n\n    getReducedResult(acc: ResponseAcc): Buffer | null | undefined {\n      if (acc && acc.dataLength === acc.data.length) {\n        return acc.data;\n      }\n    },\n  };\n};\n\nexport default createHIDframing;\n","const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (!options || typeof options !== 'object') {\n      options = {\n        loose: !!options,\n        includePrerelease: false,\n      }\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    const sameDirectionIncreasing =\n      (this.operator === '>=' || this.operator === '>') &&\n      (comp.operator === '>=' || comp.operator === '>')\n    const sameDirectionDecreasing =\n      (this.operator === '<=' || this.operator === '<') &&\n      (comp.operator === '<=' || comp.operator === '<')\n    const sameSemVer = this.semver.version === comp.semver.version\n    const differentDirectionsInclusive =\n      (this.operator === '>=' || this.operator === '<=') &&\n      (comp.operator === '>=' || comp.operator === '<=')\n    const oppositeDirectionsLessThan =\n      cmp(this.semver, '<', comp.semver, options) &&\n      (this.operator === '>=' || this.operator === '>') &&\n        (comp.operator === '<=' || comp.operator === '<')\n    const oppositeDirectionsGreaterThan =\n      cmp(this.semver, '>', comp.semver, options) &&\n      (this.operator === '<=' || this.operator === '<') &&\n        (comp.operator === '>=' || comp.operator === '>')\n\n    return (\n      sameDirectionIncreasing ||\n      sameDirectionDecreasing ||\n      (sameSemVer && differentDirectionsInclusive) ||\n      oppositeDirectionsLessThan ||\n      oppositeDirectionsGreaterThan\n    )\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst { re, t } = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n","// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.format()\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First, split based on boolean or ||\n    this.raw = range\n    this.set = range\n      .split('||')\n      // map the range to a 2d array of comparators\n      .map(r => this.parseRange(r.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${range}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0) {\n        this.set = [first]\n      } else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.format()\n  }\n\n  format () {\n    this.range = this.set\n      .map((comps) => {\n        return comps.join(' ').trim()\n      })\n      .join('||')\n      .trim()\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    range = range.trim()\n\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts = Object.keys(this.options).join(',')\n    const memoKey = `parseRange:${memoOpts}:${range}`\n    const cached = cache.get(memoKey)\n    if (cached) {\n      return cached\n    }\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range)\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n\n    // normalize spaces\n    range = range.split(/\\s+/).join(' ')\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    let rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n\n    if (loose) {\n      // in loose mode, throw out any that are not valid comparators\n      rangeList = rangeList.filter(comp => {\n        debug('loose invalid filter', comp, this.options)\n        return !!comp.match(re[t.COMPARATORLOOSE])\n      })\n    }\n    debug('range list', rangeList)\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const rangeMap = new Map()\n    const comparators = rangeList.map(comp => new Comparator(comp, this.options))\n    for (const comp of comparators) {\n      if (isNullSet(comp)) {\n        return [comp]\n      }\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has('')) {\n      rangeMap.delete('')\n    }\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\nmodule.exports = Range\n\nconst LRU = require('lru-cache')\nconst cache = new LRU({ max: 1000 })\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace,\n} = require('../internal/re')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\n// ~0.0.1 --> >=0.0.1 <0.1.0-0\nconst replaceTildes = (comp, options) =>\n  comp.trim().split(/\\s+/).map((c) => {\n    return replaceTilde(c, options)\n  }).join(' ')\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\n// ^0.0.1 --> >=0.0.1 <0.0.2-0\n// ^0.1.0 --> >=0.1.0 <0.2.0-0\nconst replaceCarets = (comp, options) =>\n  comp.trim().split(/\\s+/).map((c) => {\n    return replaceCaret(c, options)\n  }).join(' ')\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map((c) => {\n    return replaceXRange(c, options)\n  }).join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<') {\n        pr = '-0'\n      }\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp.trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return (`${from} ${to}`).trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n","const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier)\n        this.inc('pre', identifier)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier)\n        }\n        this.inc('pre', identifier)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre':\n        if (this.prerelease.length === 0) {\n          this.prerelease = [0]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            this.prerelease.push(0)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = [identifier, 0]\n            }\n          } else {\n            this.prerelease = [identifier, 0]\n          }\n        }\n        break\n\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.format()\n    this.raw = this.version\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","const parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n","const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n","const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst { re, t } = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    let next\n    while ((next = re[t.COERCERTL].exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    re[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  return parse(`${match[2]}.${match[3] || '0'}.${match[4] || '0'}`, options)\n}\nmodule.exports = coerce\n","const SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n","const compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n","const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n","const parse = require('./parse')\nconst eq = require('./eq')\n\nconst diff = (version1, version2) => {\n  if (eq(version1, version2)) {\n    return null\n  } else {\n    const v1 = parse(version1)\n    const v2 = parse(version2)\n    const hasPre = v1.prerelease.length || v2.prerelease.length\n    const prefix = hasPre ? 'pre' : ''\n    const defaultResult = hasPre ? 'prerelease' : ''\n    for (const key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\nmodule.exports = diff\n","const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n","const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n","const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n","const SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier) => {\n  if (typeof (options) === 'string') {\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(\n      version instanceof SemVer ? version.version : version,\n      options\n    ).inc(release, identifier).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n","const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n","const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n","const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n","const { MAX_LENGTH } = require('../internal/constants')\nconst { re, t } = require('../internal/re')\nconst SemVer = require('../classes/semver')\n\nconst parseOptions = require('../internal/parse-options')\nconst parse = (version, options) => {\n  options = parseOptions(options)\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  const r = options.loose ? re[t.LOOSE] : re[t.FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nmodule.exports = parse\n","const SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n","const parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n","const compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n","const compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n","const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n","const compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n","const parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n","// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nconst constants = require('./internal/constants')\nconst SemVer = require('./classes/semver')\nconst identifiers = require('./internal/identifiers')\nconst parse = require('./functions/parse')\nconst valid = require('./functions/valid')\nconst clean = require('./functions/clean')\nconst inc = require('./functions/inc')\nconst diff = require('./functions/diff')\nconst major = require('./functions/major')\nconst minor = require('./functions/minor')\nconst patch = require('./functions/patch')\nconst prerelease = require('./functions/prerelease')\nconst compare = require('./functions/compare')\nconst rcompare = require('./functions/rcompare')\nconst compareLoose = require('./functions/compare-loose')\nconst compareBuild = require('./functions/compare-build')\nconst sort = require('./functions/sort')\nconst rsort = require('./functions/rsort')\nconst gt = require('./functions/gt')\nconst lt = require('./functions/lt')\nconst eq = require('./functions/eq')\nconst neq = require('./functions/neq')\nconst gte = require('./functions/gte')\nconst lte = require('./functions/lte')\nconst cmp = require('./functions/cmp')\nconst coerce = require('./functions/coerce')\nconst Comparator = require('./classes/comparator')\nconst Range = require('./classes/range')\nconst satisfies = require('./functions/satisfies')\nconst toComparators = require('./ranges/to-comparators')\nconst maxSatisfying = require('./ranges/max-satisfying')\nconst minSatisfying = require('./ranges/min-satisfying')\nconst minVersion = require('./ranges/min-version')\nconst validRange = require('./ranges/valid')\nconst outside = require('./ranges/outside')\nconst gtr = require('./ranges/gtr')\nconst ltr = require('./ranges/ltr')\nconst intersects = require('./ranges/intersects')\nconst simplifyRange = require('./ranges/simplify')\nconst subset = require('./ranges/subset')\nmodule.exports = {\n  parse,\n  valid,\n  clean,\n  inc,\n  diff,\n  major,\n  minor,\n  patch,\n  prerelease,\n  compare,\n  rcompare,\n  compareLoose,\n  compareBuild,\n  sort,\n  rsort,\n  gt,\n  lt,\n  eq,\n  neq,\n  gte,\n  lte,\n  cmp,\n  coerce,\n  Comparator,\n  Range,\n  satisfies,\n  toComparators,\n  maxSatisfying,\n  minSatisfying,\n  minVersion,\n  validRange,\n  outside,\n  gtr,\n  ltr,\n  intersects,\n  simplifyRange,\n  subset,\n  SemVer,\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,\n  compareIdentifiers: identifiers.compareIdentifiers,\n  rcompareIdentifiers: identifiers.rcompareIdentifiers,\n}\n","// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\nmodule.exports = {\n  SEMVER_SPEC_VERSION,\n  MAX_LENGTH,\n  MAX_SAFE_INTEGER,\n  MAX_SAFE_COMPONENT_LENGTH,\n}\n","const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers,\n}\n","// parse out just the options we care about so we always get a consistent\n// obj with keys in a consistent order.\nconst opts = ['includePrerelease', 'loose', 'rtl']\nconst parseOptions = options =>\n  !options ? {}\n  : typeof options !== 'object' ? { loose: true }\n  : opts.filter(k => options[k]).reduce((o, k) => {\n    o[k] = true\n    return o\n  }, {})\nmodule.exports = parseOptions\n","const { MAX_SAFE_COMPONENT_LENGTH } = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst createToken = (name, value, isGlobal) => {\n  const index = R++\n  debug(name, index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '[0-9]+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*')\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', '[0-9A-Za-z-]+')\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCE', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\n","// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n","const Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\nmodule.exports = intersects\n","const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin))) {\n      minver = setMin\n    }\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n","const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst { ANY } = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n","// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let first = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!first) {\n        first = version\n      }\n    } else {\n      if (prev) {\n        set.push([first, prev])\n      }\n      prev = null\n      first = null\n    }\n  }\n  if (first) {\n    set.push([first, null])\n  }\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max) {\n      ranges.push(min)\n    } else if (!max && min === v[0]) {\n      ranges.push('*')\n    } else if (!max) {\n      ranges.push(`>=${min}`)\n    } else if (min === v[0]) {\n      ranges.push(`<=${max}`)\n    } else {\n      ranges.push(`${min} - ${max}`)\n    }\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n","const Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom) {\n    return true\n  }\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub) {\n        continue OUTER\n      }\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull) {\n      return false\n    }\n  }\n  return true\n}\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom) {\n    return true\n  }\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY) {\n      return true\n    } else if (options.includePrerelease) {\n      sub = [new Comparator('>=0.0.0-0')]\n    } else {\n      sub = [new Comparator('>=0.0.0')]\n    }\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease) {\n      return true\n    } else {\n      dom = [new Comparator('>=0.0.0')]\n    }\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=') {\n      gt = higherGT(gt, c, options)\n    } else if (c.operator === '<' || c.operator === '<=') {\n      lt = lowerLT(lt, c, options)\n    } else {\n      eqSet.add(c.semver)\n    }\n  }\n\n  if (eqSet.size > 1) {\n    return null\n  }\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0) {\n      return null\n    } else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<=')) {\n      return null\n    }\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options)) {\n      return null\n    }\n\n    if (lt && !satisfies(eq, String(lt), options)) {\n      return null\n    }\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options)) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt) {\n          return false\n        }\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt) {\n          return false\n        }\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0) {\n      return false\n    }\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0) {\n    return false\n  }\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0) {\n    return false\n  }\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre) {\n    return false\n  }\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n","const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n","const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n","import semver from \"semver\";\n\n/**\n * The USB product IDs will be defined as MMII, encoding a model (MM) and an interface bitfield (II)\n *\n ** Model\n * Ledger Nano S : 0x10\n * Ledger Blue : 0x00\n * Ledger Nano X : 0x40\n *\n ** Interface support bitfield\n * Generic HID : 0x01\n * Keyboard HID : 0x02\n * U2F : 0x04\n * CCID : 0x08\n * WebUSB : 0x10\n */\nexport const IIGenericHID = 0x01;\nexport const IIKeyboardHID = 0x02;\nexport const IIU2F = 0x04;\nexport const IICCID = 0x08;\nexport const IIWebUSB = 0x10;\n\nexport enum DeviceModelId {\n  blue = \"blue\",\n  nanoS = \"nanoS\",\n  nanoSP = \"nanoSP\",\n  nanoX = \"nanoX\",\n  nanoFTS = \"nanoFTS\",\n}\n\nconst devices: { [key in DeviceModelId]: DeviceModel } = {\n  [DeviceModelId.blue]: {\n    id: DeviceModelId.blue,\n    productName: \"Ledger Blue\",\n    productIdMM: 0x00,\n    legacyUsbProductId: 0x0000,\n    usbOnly: true,\n    memorySize: 480 * 1024,\n    masks: [0x31000000, 0x31010000],\n    getBlockSize: (_firwareVersion: string): number => 4 * 1024,\n  },\n  [DeviceModelId.nanoS]: {\n    id: DeviceModelId.nanoS,\n    productName: \"Ledger Nano S\",\n    productIdMM: 0x10,\n    legacyUsbProductId: 0x0001,\n    usbOnly: true,\n    memorySize: 320 * 1024,\n    masks: [0x31100000],\n    getBlockSize: (firmwareVersion: string): number =>\n      semver.lt(semver.coerce(firmwareVersion) ?? \"\", \"2.0.0\")\n        ? 4 * 1024\n        : 2 * 1024,\n  },\n  [DeviceModelId.nanoSP]: {\n    id: DeviceModelId.nanoSP,\n    productName: \"Ledger Nano S Plus\",\n    productIdMM: 0x50,\n    legacyUsbProductId: 0x0005,\n    usbOnly: true,\n    memorySize: 1536 * 1024,\n    masks: [0x33100000],\n    getBlockSize: (_firmwareVersion: string): number => 32,\n  },\n  [DeviceModelId.nanoX]: {\n    id: DeviceModelId.nanoX,\n    productName: \"Ledger Nano X\",\n    productIdMM: 0x40,\n    legacyUsbProductId: 0x0004,\n    usbOnly: false,\n    memorySize: 2 * 1024 * 1024,\n    masks: [0x33000000],\n    getBlockSize: (_firwareVersion: string): number => 4 * 1024,\n    bluetoothSpec: [\n      {\n        serviceUuid: \"13d63400-2c97-0004-0000-4c6564676572\",\n        notifyUuid: \"13d63400-2c97-0004-0001-4c6564676572\",\n        writeUuid: \"13d63400-2c97-0004-0002-4c6564676572\",\n        writeCmdUuid: \"13d63400-2c97-0004-0003-4c6564676572\",\n      },\n    ],\n  },\n  [DeviceModelId.nanoFTS]: {\n    id: DeviceModelId.nanoFTS,\n    productName: \"Ledger Nano FTS\",\n    productIdMM: 0x60,\n    legacyUsbProductId: 0x0006,\n    usbOnly: false,\n    memorySize: 2 * 1024 * 1024, // ← ↓ TODO Update with actual values\n    masks: [0x33200000],\n    getBlockSize: (_firwareVersion: string): number => 4 * 1024,\n    bluetoothSpec: [\n      {\n        serviceUuid: \"13d63400-2c97-6004-0000-4c6564676572\",\n        notifyUuid: \"13d63400-2c97-6004-0001-4c6564676572\",\n        writeUuid: \"13d63400-2c97-6004-0002-4c6564676572\",\n        writeCmdUuid: \"13d63400-2c97-6004-0003-4c6564676572\",\n      },\n    ],\n  },\n};\n\nconst productMap = {\n  Blue: DeviceModelId.blue,\n  \"Nano S\": DeviceModelId.nanoS,\n  \"Nano S Plus\": DeviceModelId.nanoSP,\n  \"Nano X\": DeviceModelId.nanoX,\n  \"Nano FTS\": DeviceModelId.nanoFTS,\n};\n\nconst devicesList: DeviceModel[] = Object.values(devices);\n\n/**\n *\n */\nexport const ledgerUSBVendorId = 0x2c97;\n\n/**\n *\n */\nexport const getDeviceModel = (id: DeviceModelId): DeviceModel => {\n  const info = devices[id];\n  if (!info) throw new Error(\"device '\" + id + \"' does not exist\");\n  return info;\n};\n\n/**\n * Given a `targetId`, return the deviceModel associated to it,\n * based on the first two bytes.\n */\nexport const identifyTargetId = (\n  targetId: number\n): DeviceModel | null | undefined => {\n  const deviceModel = devicesList.find(({ masks }) =>\n    masks.find((mask) => (targetId & 0xffff0000) === mask)\n  );\n\n  return deviceModel;\n};\n\n/**\n *\n */\nexport const identifyUSBProductId = (\n  usbProductId: number\n): DeviceModel | null | undefined => {\n  const legacy = devicesList.find((d) => d.legacyUsbProductId === usbProductId);\n  if (legacy) return legacy;\n  const mm = usbProductId >> 8;\n  const deviceModel = devicesList.find((d) => d.productIdMM === mm);\n  return deviceModel;\n};\n\nexport const identifyProductName = (\n  productName: string\n): DeviceModel | null | undefined => {\n  const deviceModel = devicesList.find((d) => d.id === productMap[productName]);\n  return deviceModel;\n};\n\nconst bluetoothServices: string[] = [];\nconst serviceUuidToInfos: Record<string, BluetoothInfos> = {};\n\nfor (const id in devices) {\n  const deviceModel = devices[id];\n  const { bluetoothSpec } = deviceModel;\n  if (bluetoothSpec) {\n    for (let i = 0; i < bluetoothSpec.length; i++) {\n      const spec = bluetoothSpec[i];\n      bluetoothServices.push(spec.serviceUuid);\n      serviceUuidToInfos[spec.serviceUuid] = serviceUuidToInfos[\n        spec.serviceUuid.replace(/-/g, \"\")\n      ] = {\n        deviceModel,\n        ...spec,\n      };\n    }\n  }\n}\n\n/**\n *\n */\nexport const getBluetoothServiceUuids = (): string[] => bluetoothServices;\n\n/**\n *\n */\nexport const getInfosForServiceUuid = (\n  uuid: string\n): BluetoothInfos | undefined => serviceUuidToInfos[uuid.toLowerCase()];\n\n/**\n *\n */\nexport interface DeviceModel {\n  id: DeviceModelId;\n  productName: string;\n  productIdMM: number;\n  legacyUsbProductId: number;\n  usbOnly: boolean;\n  memorySize: number;\n  masks: number[];\n  // blockSize: number, // THIS FIELD IS DEPRECATED, use getBlockSize\n  getBlockSize: (firmwareVersion: string) => number;\n  bluetoothSpec?: {\n    serviceUuid: string;\n    writeUuid: string;\n    writeCmdUuid: string;\n    notifyUuid: string;\n  }[];\n}\n\n/**\n *\n */\nexport interface BluetoothInfos {\n  deviceModel: DeviceModel;\n  serviceUuid: string;\n  writeUuid: string;\n  writeCmdUuid: string;\n  notifyUuid: string;\n}\n","import EventEmitter from \"events\";\nimport type { DeviceModel } from \"@ledgerhq/devices\";\nimport {\n  TransportRaceCondition,\n  TransportError,\n  StatusCodes,\n  getAltStatusMessage,\n  TransportStatusError,\n} from \"@ledgerhq/errors\";\nexport {\n  TransportError,\n  TransportStatusError,\n  StatusCodes,\n  getAltStatusMessage,\n};\n\n/**\n */\nexport type Subscription = {\n  unsubscribe: () => void;\n};\n\n/**\n */\nexport type Device = any; // Should be a union type of all possible Device object's shape\n\nexport type DescriptorEventType = \"add\" | \"remove\";\n/**\n * A \"descriptor\" is a parameter that is specific to the implementation, and can be an ID, file path, or URL.\n * type: add or remove event\n * descriptor: a parameter that can be passed to open(descriptor)\n * deviceModel: device info on the model (is it a nano s, nano x, ...)\n * device: transport specific device info\n */\nexport interface DescriptorEvent<Descriptor> {\n  type: DescriptorEventType;\n  descriptor: Descriptor;\n  deviceModel?: DeviceModel | null | undefined;\n  device?: Device;\n}\n\n/**\n * Observer generic type, following the Observer pattern\n */\nexport type Observer<EventType, EventError = unknown> = Readonly<{\n  next: (event: EventType) => unknown;\n  error: (e: EventError) => unknown;\n  complete: () => unknown;\n}>;\n\n/**\n * The Transport class defines a generic interface for communicating with a Ledger hardware wallet.\n * There are different kind of transports based on the technology (channels like U2F, HID, Bluetooth, Webusb) and environment (Node, Web,...).\n * It is an abstract class that needs to be implemented.\n */\nexport default class Transport {\n  exchangeTimeout = 30000;\n  unresponsiveTimeout = 15000;\n  deviceModel: DeviceModel | null | undefined = null;\n\n  /**\n   * Check if the transport is supported on the current platform/browser.\n   * @returns {Promise<boolean>} A promise that resolves with a boolean indicating support.\n   */\n  static readonly isSupported: () => Promise<boolean>;\n\n  /**\n   * List all available descriptors for the transport.\n   * For a better granularity, checkout `listen()`.\n   *\n   * @returns {Promise<Array<any>>} A promise that resolves with an array of descriptors.\n   * @example\n   * TransportFoo.list().then(descriptors => ...)\n   */\n  static readonly list: () => Promise<Array<any>>;\n\n  /**\n   * Listen for device events for the transport. The method takes an observer of DescriptorEvent and returns a Subscription.\n   * A DescriptorEvent is an object containing a \"descriptor\" and a \"type\" field. The \"type\" field can be \"add\" or \"remove\", and the \"descriptor\" field can be passed to the \"open\" method.\n   * The \"listen\" method will first emit all currently connected devices and then will emit events as they occur, such as when a USB device is plugged in or a Bluetooth device becomes discoverable.\n   * @param {Observer<DescriptorEvent<any>>} observer - An object with \"next\", \"error\", and \"complete\" functions, following the observer pattern.\n   * @returns {Subscription} A Subscription object on which you can call \".unsubscribe()\" to stop listening to descriptors.\n   * @example\n  const sub = TransportFoo.listen({\n  next: e => {\n    if (e.type===\"add\") {\n      sub.unsubscribe();\n      const transport = await TransportFoo.open(e.descriptor);\n      ...\n    }\n  },\n  error: error => {},\n  complete: () => {}\n  })\n   */\n  static readonly listen: (\n    observer: Observer<DescriptorEvent<any>>\n  ) => Subscription;\n\n  /**\n   * Attempt to create a Transport instance with a specific descriptor.\n   * @param {any} descriptor - The descriptor to open the transport with.\n   * @param {number} timeout - An optional timeout for the transport connection.\n   * @returns {Promise<Transport>} A promise that resolves with a Transport instance.\n   * @example\n  TransportFoo.open(descriptor).then(transport => ...)\n   */\n  static readonly open: (\n    descriptor?: any,\n    timeout?: number\n  ) => Promise<Transport>;\n\n  /**\n   * Send data to the device using a low level API.\n   * It's recommended to use the \"send\" method for a higher level API.\n   * @param {Buffer} apdu - The data to send.\n   * @returns {Promise<Buffer>} A promise that resolves with the response data from the device.\n   */\n  exchange(_apdu: Buffer): Promise<Buffer> {\n    throw new Error(\"exchange not implemented\");\n  }\n\n  /**\n   * Send apdus in batch to the device using a low level API.\n   * The default implementation is to call exchange for each apdu.\n   * @param {Array<Buffer>} apdus - array of apdus to send.\n   * @param {Observer<Buffer>} observer - an observer that will receive the response of each apdu.\n   * @returns {Subscription} A Subscription object on which you can call \".unsubscribe()\" to stop sending apdus.\n   */\n  exchangeBulk(apdus: Buffer[], observer: Observer<Buffer>): Subscription {\n    let unsubscribed = false;\n    const unsubscribe = () => {\n      unsubscribed = true;\n    };\n\n    const main = async () => {\n      if (unsubscribed) return;\n      for (const apdu of apdus) {\n        const r = await this.exchange(apdu);\n        if (unsubscribed) return;\n        const status = r.readUInt16BE(r.length - 2);\n        if (status !== StatusCodes.OK) {\n          throw new TransportStatusError(status);\n        }\n        observer.next(r);\n      }\n    };\n\n    main().then(\n      () => !unsubscribed && observer.complete(),\n      (e) => !unsubscribed && observer.error(e)\n    );\n\n    return { unsubscribe };\n  }\n\n  /**\n   * Set the \"scramble key\" for the next data exchanges with the device.\n   * Each app can have a different scramble key and it is set internally during instantiation.\n   * @param {string} key - The scramble key to set.\n   * @deprecated This method is no longer needed for modern transports and should be migrated away from.\n   */\n  setScrambleKey(_key: string) {}\n\n  /**\n   * Close the connection with the device.\n   * @returns {Promise<void>} A promise that resolves when the transport is closed.\n   */\n  close(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  _events = new EventEmitter();\n\n  /**\n   * Listen for an event on the transport instance.\n   * Transport implementations may have specific events. Common events include:\n   * \"disconnect\" : triggered when the transport is disconnected.\n   * @param {string} eventName - The name of the event to listen for.\n   * @param {(...args: Array<any>) => any} cb - The callback function to be invoked when the event occurs.\n   */\n  on(eventName: string, cb: (...args: Array<any>) => any): void {\n    this._events.on(eventName, cb);\n  }\n\n  /**\n   * Stop listening to an event on an instance of transport.\n   */\n  off(eventName: string, cb: (...args: Array<any>) => any): void {\n    this._events.removeListener(eventName, cb);\n  }\n\n  emit(event: string, ...args: any): void {\n    this._events.emit(event, ...args);\n  }\n\n  /**\n   * Enable or not logs of the binary exchange\n   */\n  setDebugMode() {\n    console.warn(\n      \"setDebugMode is deprecated. use @ledgerhq/logs instead. No logs are emitted in this anymore.\"\n    );\n  }\n\n  /**\n   * Set a timeout (in milliseconds) for the exchange call. Only some transport might implement it. (e.g. U2F)\n   */\n  setExchangeTimeout(exchangeTimeout: number): void {\n    this.exchangeTimeout = exchangeTimeout;\n  }\n\n  /**\n   * Define the delay before emitting \"unresponsive\" on an exchange that does not respond\n   */\n  setExchangeUnresponsiveTimeout(unresponsiveTimeout: number): void {\n    this.unresponsiveTimeout = unresponsiveTimeout;\n  }\n\n  /**\n   * Send data to the device using the higher level API.\n   * @param {number} cla - The instruction class for the command.\n   * @param {number} ins - The instruction code for the command.\n   * @param {number} p1 - The first parameter for the instruction.\n   * @param {number} p2 - The second parameter for the instruction.\n   * @param {Buffer} data - The data to be sent. Defaults to an empty buffer.\n   * @param {Array<number>} statusList - A list of acceptable status codes for the response. Defaults to [StatusCodes.OK].\n   * @returns {Promise<Buffer>} A promise that resolves with the response data from the device.\n   */\n  send = async (\n    cla: number,\n    ins: number,\n    p1: number,\n    p2: number,\n    data: Buffer = Buffer.alloc(0),\n    statusList: Array<number> = [StatusCodes.OK]\n  ): Promise<Buffer> => {\n    if (data.length >= 256) {\n      throw new TransportError(\n        \"data.length exceed 256 bytes limit. Got: \" + data.length,\n        \"DataLengthTooBig\"\n      );\n    }\n\n    const response = await this.exchange(\n      Buffer.concat([\n        Buffer.from([cla, ins, p1, p2]),\n        Buffer.from([data.length]),\n        data,\n      ])\n    );\n    const sw = response.readUInt16BE(response.length - 2);\n\n    if (!statusList.some((s) => s === sw)) {\n      throw new TransportStatusError(sw);\n    }\n\n    return response;\n  };\n\n  /**\n   * create() allows to open the first descriptor available or\n   * throw if there is none or if timeout is reached.\n   * This is a light helper, alternative to using listen() and open() (that you may need for any more advanced usecase)\n   * @example\n  TransportFoo.create().then(transport => ...)\n   */\n  static create(\n    openTimeout = 3000,\n    listenTimeout?: number\n  ): Promise<Transport> {\n    return new Promise((resolve, reject) => {\n      let found = false;\n      const sub = this.listen({\n        next: (e) => {\n          found = true;\n          if (sub) sub.unsubscribe();\n          if (listenTimeoutId) clearTimeout(listenTimeoutId);\n          this.open(e.descriptor, openTimeout).then(resolve, reject);\n        },\n        error: (e) => {\n          if (listenTimeoutId) clearTimeout(listenTimeoutId);\n          reject(e);\n        },\n        complete: () => {\n          if (listenTimeoutId) clearTimeout(listenTimeoutId);\n\n          if (!found) {\n            reject(\n              new TransportError(\n                this.ErrorMessage_NoDeviceFound,\n                \"NoDeviceFound\"\n              )\n            );\n          }\n        },\n      });\n      const listenTimeoutId = listenTimeout\n        ? setTimeout(() => {\n            sub.unsubscribe();\n            reject(\n              new TransportError(\n                this.ErrorMessage_ListenTimeout,\n                \"ListenTimeout\"\n              )\n            );\n          }, listenTimeout)\n        : null;\n    });\n  }\n\n  exchangeBusyPromise: Promise<void> | null | undefined;\n  exchangeAtomicImpl = async (\n    f: () => Promise<Buffer | void>\n  ): Promise<Buffer | void> => {\n    if (this.exchangeBusyPromise) {\n      throw new TransportRaceCondition(\n        \"An action was already pending on the Ledger device. Please deny or reconnect.\"\n      );\n    }\n\n    let resolveBusy;\n    const busyPromise: Promise<void> = new Promise((r) => {\n      resolveBusy = r;\n    });\n    this.exchangeBusyPromise = busyPromise;\n    let unresponsiveReached = false;\n    const timeout = setTimeout(() => {\n      unresponsiveReached = true;\n      this.emit(\"unresponsive\");\n    }, this.unresponsiveTimeout);\n\n    try {\n      const res = await f();\n\n      if (unresponsiveReached) {\n        this.emit(\"responsive\");\n      }\n\n      return res;\n    } finally {\n      clearTimeout(timeout);\n      if (resolveBusy) resolveBusy();\n      this.exchangeBusyPromise = null;\n    }\n  };\n\n  decorateAppAPIMethods(\n    self: Record<string, any>,\n    methods: Array<string>,\n    scrambleKey: string\n  ) {\n    for (const methodName of methods) {\n      self[methodName] = this.decorateAppAPIMethod(\n        methodName,\n        self[methodName],\n        self,\n        scrambleKey\n      );\n    }\n  }\n\n  _appAPIlock: string | null = null;\n\n  decorateAppAPIMethod<R, A extends any[]>(\n    methodName: string,\n    f: (...args: A) => Promise<R>,\n    ctx: any,\n    scrambleKey: string\n  ): (...args: A) => Promise<R> {\n    return async (...args) => {\n      const { _appAPIlock } = this;\n\n      if (_appAPIlock) {\n        return Promise.reject(\n          new TransportError(\n            \"Ledger Device is busy (lock \" + _appAPIlock + \")\",\n            \"TransportLocked\"\n          )\n        );\n      }\n\n      try {\n        this._appAPIlock = methodName;\n        this.setScrambleKey(scrambleKey);\n        return await f.apply(ctx, args);\n      } finally {\n        this._appAPIlock = null;\n      }\n    };\n  }\n\n  static ErrorMessage_ListenTimeout = \"No Ledger device found (timeout)\";\n  static ErrorMessage_NoDeviceFound = \"No Ledger device found\";\n}\n","/**\n * A Log object\n */\nexport interface Log {\n  type: string;\n  message?: string;\n  data?: any;\n  // unique amount all logs\n  id: string;\n  // date of the log\n  date: Date;\n}\nexport type Unsubscribe = () => void;\nexport type Subscriber = (arg0: Log) => void;\nlet id = 0;\nconst subscribers: Subscriber[] = [];\n\n/**\n * log something\n * @param type a namespaced identifier of the log (it is not a level like \"debug\", \"error\" but more like \"apdu-in\", \"apdu-out\", etc...)\n * @param message a clear message of the log associated to the type\n */\nexport const log = (type: string, message?: string, data?: any) => {\n  const obj: Log = {\n    type,\n    id: String(++id),\n    date: new Date(),\n  };\n  if (message) obj.message = message;\n  if (data) obj.data = data;\n  dispatch(obj);\n};\n\n/**\n * listen to logs.\n * @param cb that is called for each future log() with the Log object\n * @return a function that can be called to unsubscribe the listener\n */\nexport const listen = (cb: Subscriber): Unsubscribe => {\n  subscribers.push(cb);\n  return () => {\n    const i = subscribers.indexOf(cb);\n\n    if (i !== -1) {\n      // equivalent of subscribers.splice(i, 1) // https://twitter.com/Rich_Harris/status/1125850391155965952\n      subscribers[i] = subscribers[subscribers.length - 1];\n      subscribers.pop();\n    }\n  };\n};\n\nfunction dispatch(log: Log) {\n  for (let i = 0; i < subscribers.length; i++) {\n    try {\n      subscribers[i](log);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\n// for debug purpose\n\ndeclare global {\n  interface Window {\n    __ledgerLogsListen: any;\n  }\n}\n\nif (typeof window !== \"undefined\") {\n  window.__ledgerLogsListen = listen;\n}\n","import Transport from \"@ledgerhq/hw-transport\";\nimport type {\n  Observer,\n  DescriptorEvent,\n  Subscription,\n} from \"@ledgerhq/hw-transport\";\nimport hidFraming from \"@ledgerhq/devices/lib/hid-framing\";\nimport { identifyUSBProductId, ledgerUSBVendorId } from \"@ledgerhq/devices\";\nimport type { DeviceModel } from \"@ledgerhq/devices\";\nimport { log } from \"@ledgerhq/logs\";\nimport {\n  TransportOpenUserCancelled,\n  DisconnectedDeviceDuringOperation,\n  DisconnectedDevice,\n  TransportError,\n} from \"@ledgerhq/errors\";\n\nconst ledgerDevices = [\n  {\n    vendorId: ledgerUSBVendorId,\n  },\n];\n\nconst isSupported = () =>\n  Promise.resolve(!!(window.navigator && window.navigator.hid));\n\nconst getHID = (): HID => {\n  // $FlowFixMe\n  const { hid } = navigator;\n  if (!hid)\n    throw new TransportError(\n      \"navigator.hid is not supported\",\n      \"HIDNotSupported\"\n    );\n  return hid;\n};\n\nasync function requestLedgerDevices(): Promise<HIDDevice[]> {\n  const device = await getHID().requestDevice({\n    filters: ledgerDevices,\n  });\n  if (Array.isArray(device)) return device;\n  return [device];\n}\n\nasync function getLedgerDevices(): Promise<HIDDevice[]> {\n  const devices = await getHID().getDevices();\n  return devices.filter((d) => d.vendorId === ledgerUSBVendorId);\n}\n\nasync function getFirstLedgerDevice(): Promise<HIDDevice> {\n  const existingDevices = await getLedgerDevices();\n  if (existingDevices.length > 0) return existingDevices[0];\n  const devices = await requestLedgerDevices();\n  return devices[0];\n}\n/**\n * WebHID Transport implementation\n * @example\n * import TransportWebHID from \"@ledgerhq/hw-transport-webhid\";\n * ...\n * TransportWebHID.create().then(transport => ...)\n */\n\nexport default class TransportWebHID extends Transport {\n  device: HIDDevice;\n  deviceModel: DeviceModel | null | undefined;\n  channel = Math.floor(Math.random() * 0xffff);\n  packetSize = 64;\n\n  constructor(device: HIDDevice) {\n    super();\n    this.device = device;\n    this.deviceModel =\n      typeof device.productId === \"number\"\n        ? identifyUSBProductId(device.productId)\n        : undefined;\n    device.addEventListener(\"inputreport\", this.onInputReport);\n  }\n\n  inputs: Buffer[] = [];\n  inputCallback: ((arg0: Buffer) => void) | null | undefined;\n  read = (): Promise<Buffer> => {\n    if (this.inputs.length) {\n      return Promise.resolve((this.inputs.shift() as unknown) as Buffer);\n    }\n\n    return new Promise((success) => {\n      this.inputCallback = success;\n    });\n  };\n  onInputReport = (e: HIDInputReportEvent) => {\n    const buffer = Buffer.from(e.data.buffer);\n\n    if (this.inputCallback) {\n      this.inputCallback(buffer);\n      this.inputCallback = null;\n    } else {\n      this.inputs.push(buffer);\n    }\n  };\n\n  /**\n   * Check if WebUSB transport is supported.\n   */\n  static isSupported = isSupported;\n\n  /**\n   * List the WebUSB devices that was previously authorized by the user.\n   */\n  static list = getLedgerDevices;\n\n  /**\n   * Actively listen to WebUSB devices and emit ONE device\n   * that was either accepted before, if not it will trigger the native permission UI.\n   *\n   * Important: it must be called in the context of a UI click!\n   */\n  static listen = (\n    observer: Observer<DescriptorEvent<HIDDevice>>\n  ): Subscription => {\n    let unsubscribed = false;\n    getFirstLedgerDevice().then(\n      (device) => {\n        if (!device) {\n          observer.error(\n            new TransportOpenUserCancelled(\"Access denied to use Ledger device\")\n          );\n        } else if (!unsubscribed) {\n          const deviceModel =\n            typeof device.productId === \"number\"\n              ? identifyUSBProductId(device.productId)\n              : undefined;\n          observer.next({\n            type: \"add\",\n            descriptor: device,\n            deviceModel,\n          });\n          observer.complete();\n        }\n      },\n      (error) => {\n        observer.error(new TransportOpenUserCancelled(error.message));\n      }\n    );\n\n    function unsubscribe() {\n      unsubscribed = true;\n    }\n\n    return {\n      unsubscribe,\n    };\n  };\n\n  /**\n   * Similar to create() except it will always display the device permission (even if some devices are already accepted).\n   */\n  static async request() {\n    const [device] = await requestLedgerDevices();\n    return TransportWebHID.open(device);\n  }\n\n  /**\n   * Similar to create() except it will never display the device permission (it returns a Promise<?Transport>, null if it fails to find a device).\n   */\n  static async openConnected() {\n    const devices = await getLedgerDevices();\n    if (devices.length === 0) return null;\n    return TransportWebHID.open(devices[0]);\n  }\n\n  /**\n   * Create a Ledger transport with a HIDDevice\n   */\n  static async open(device: HIDDevice) {\n    await device.open();\n    const transport = new TransportWebHID(device);\n\n    const onDisconnect = (e) => {\n      if (device === e.device) {\n        getHID().removeEventListener(\"disconnect\", onDisconnect);\n\n        transport._emitDisconnect(new DisconnectedDevice());\n      }\n    };\n\n    getHID().addEventListener(\"disconnect\", onDisconnect);\n    return transport;\n  }\n\n  _disconnectEmitted = false;\n  _emitDisconnect = (e: Error) => {\n    if (this._disconnectEmitted) return;\n    this._disconnectEmitted = true;\n    this.emit(\"disconnect\", e);\n  };\n\n  /**\n   * Release the transport device\n   */\n  async close(): Promise<void> {\n    await this.exchangeBusyPromise;\n    this.device.removeEventListener(\"inputreport\", this.onInputReport);\n    await this.device.close();\n  }\n\n  /**\n   * Exchange with the device using APDU protocol.\n   * @param apdu\n   * @returns a promise of apdu response\n   */\n  exchange = async (apdu: Buffer): Promise<Buffer> => {\n    const b = await this.exchangeAtomicImpl(async () => {\n      const { channel, packetSize } = this;\n      log(\"apdu\", \"=> \" + apdu.toString(\"hex\"));\n      const framing = hidFraming(channel, packetSize);\n      // Write...\n      const blocks = framing.makeBlocks(apdu);\n\n      for (let i = 0; i < blocks.length; i++) {\n        await this.device.sendReport(0, blocks[i]);\n      }\n\n      // Read...\n      let result;\n      let acc;\n\n      while (!(result = framing.getReducedResult(acc))) {\n        const buffer = await this.read();\n        acc = framing.reduceResponse(acc, buffer);\n      }\n\n      log(\"apdu\", \"<= \" + result.toString(\"hex\"));\n      return result;\n    }).catch((e) => {\n      if (e && e.message && e.message.includes(\"write\")) {\n        this._emitDisconnect(e);\n\n        throw new DisconnectedDeviceDuringOperation(e.message);\n      }\n\n      throw e;\n    });\n    return b as Buffer;\n  };\n\n  setScrambleKey() {}\n}\n","'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n","'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n","'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n"],"names":["errors_1","require","asUInt16BE","value","b","Buffer","alloc","writeUInt16BE","initialAcc","data","dataLength","sequence","exports","channel","packetSize","makeBlocks","apdu","concat","length","blockSize","nbBlocks","Math","ceil","fill","blocks","i","head","writeUInt8","chunk","slice","push","reduceResponse","acc","_a","readUInt16BE","TransportError","readUInt8","chunkData","getReducedResult","ANY","Symbol","Comparator","comp","options","_classCallCheck","parseOptions","loose","debug","this","parse","semver","operator","version","_createClass","key","r","re","t","COMPARATORLOOSE","COMPARATOR","m","match","TypeError","undefined","SemVer","er","cmp","includePrerelease","Range","test","sameDirectionIncreasing","sameDirectionDecreasing","sameSemVer","differentDirectionsInclusive","oppositeDirectionsLessThan","oppositeDirectionsGreaterThan","get","module","_require","range","_this","raw","set","format","split","map","parseRange","trim","filter","c","first","isNullSet","_step","_iterator","_createForOfIteratorHelper","s","n","done","isAny","err","e","f","comps","join","_this2","memoOpts","Object","keys","memoKey","cached","cache","hr","HYPHENRANGELOOSE","HYPHENRANGE","replace","hyphenReplace","COMPARATORTRIM","comparatorTrimReplace","rangeList","TILDETRIM","tildeTrimReplace","CARETTRIM","caretTrimReplace","parseComparator","replaceGTE0","_step2","rangeMap","Map","comparators","_iterator2","size","has","delete","result","_toConsumableArray","values","some","thisComparators","isSatisfiable","rangeComparators","every","thisComparator","rangeComparator","intersects","testSet","max","remainingComparators","testComparator","pop","otherComparator","replaceCarets","replaceTildes","replaceXRanges","replaceStars","isX","id","toLowerCase","replaceTilde","TILDELOOSE","TILDE","_","M","p","pr","ret","replaceCaret","CARETLOOSE","CARET","z","replaceXRange","XRANGELOOSE","XRANGE","gtlt","xM","xm","xp","anyX","STAR","GTE0PRE","GTE0","incPr","$0","from","fM","fm","fp","fpr","fb","to","tM","tm","tp","tpr","tb","prerelease","allowed","major","minor","patch","MAX_LENGTH","MAX_SAFE_INTEGER","_require2","compareIdentifiers","LOOSE","FULL","num","build","other","compareMain","comparePre","a","release","identifier","inc","isNaN","Error","eq","neq","gt","gte","lt","lte","op","String","rtl","next","COERCERTL","exec","index","lastIndex","COERCE","versionA","versionB","compare","compareBuild","version1","version2","v1","v2","hasPre","prefix","defaultResult","parsed","list","sort","v","internalRe","constants","identifiers","valid","clean","diff","rcompare","compareLoose","rsort","coerce","satisfies","toComparators","maxSatisfying","minSatisfying","minVersion","validRange","outside","gtr","ltr","simplifyRange","subset","src","tokens","SEMVER_SPEC_VERSION","rcompareIdentifiers","Number","MAX_SAFE_COMPONENT_LENGTH","process","NODE_DEBUG","_console","_len","arguments","args","Array","_key","console","error","apply","numeric","anum","bnum","opts","k","reduce","o","R","createToken","name","isGlobal","RegExp","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","BUILDIDENTIFIER","MAINVERSION","PRERELEASE","BUILD","FULLPLAIN","MAINVERSIONLOOSE","PRERELEASELOOSE","LOOSEPLAIN","XRANGEIDENTIFIER","XRANGEIDENTIFIERLOOSE","GTLT","XRANGEPLAIN","XRANGEPLAINLOOSE","LONETILDE","LONECARET","r1","r2","versions","maxSV","rangeObj","forEach","min","minSV","minver","_loop","setMin","comparator","compver","hilo","gtfn","ltefn","ltfn","ecomp","high","low","_ret","prev","ranges","_i","_set","_set$_i","_slicedToArray","simplified","original","simpleSubset","sub","dom","_step3","gtltComp","eqSet","Set","_iterator3","higherGT","lowerLT","add","_step4","higher","lower","hasDomLT","hasDomGT","_iterator4","_step6","_iterator6","needDomLTPre","needDomGTPre","_step5","_iterator5","sawNonNull","OUTER","simpleSub","simpleDom","isSub","DeviceModelId","Transport","exchangeTimeout","unresponsiveTimeout","deviceModel","_events","EventEmitter","send","cla","ins","p1","p2","statusList","StatusCodes","exchange","response","sent","sw","TransportStatusError","exchangeAtomicImpl","__awaiter","exchangeBusyPromise","TransportRaceCondition","busyPromise","Promise","resolveBusy","unresponsiveReached","timeout","setTimeout","emit","res","clearTimeout","_appAPIlock","prototype","_apdu","exchangeBulk","apdus","observer","unsubscribed","apdus_1","__values","apdus_1_1","_b","status_1","then","complete","unsubscribe","setScrambleKey","close","resolve","on","eventName","cb","off","removeListener","event","__spreadArray","__read","setDebugMode","warn","setExchangeTimeout","setExchangeUnresponsiveTimeout","create","openTimeout","listenTimeout","reject","found","listen","listenTimeoutId","open","descriptor","ErrorMessage_NoDeviceFound","ErrorMessage_ListenTimeout","decorateAppAPIMethods","self","methods","scrambleKey","methods_1","methods_1_1","methodName","decorateAppAPIMethod","ctx","devices","blue","productName","productIdMM","legacyUsbProductId","usbOnly","memorySize","masks","getBlockSize","_firwareVersion","nanoS","firmwareVersion","nanoSP","_firmwareVersion","nanoX","bluetoothSpec","serviceUuid","notifyUuid","writeUuid","writeCmdUuid","nanoFTS","devicesList","ledgerUSBVendorId","identifyUSBProductId","usbProductId","legacy","find","d","mm","bluetoothServices","serviceUuidToInfos","spec","__assign","subscribers","log","type","message","obj","date","Date","dispatch","window","__ledgerLogsListen","indexOf","ledgerDevices","vendorId","isSupported","navigator","hid","getHID","requestLedgerDevices","requestDevice","filters","device","isArray","getLedgerDevices","getDevices","TransportWebHID","_super","call","floor","random","inputs","read","shift","success","inputCallback","onInputReport","buffer","_disconnectEmitted","_emitDisconnect","toString","framing","hidFraming","sendReport","includes","DisconnectedDeviceDuringOperation","productId","addEventListener","__extends","request","openConnected","transport","onDisconnect","removeEventListener","DisconnectedDevice","existingDevices","getFirstLedgerDevice","TransportOpenUserCancelled","Yallist","MAX","LENGTH","LENGTH_CALCULATOR","ALLOW_STALE","MAX_AGE","DISPOSE","NO_DISPOSE_ON_SET","LRU_LIST","CACHE","UPDATE_AGE_ON_GET","naiveLength","LRUCache","Infinity","lc","stale","maxAge","dispose","noDisposeOnSet","updateAgeOnGet","reset","mL","allowStale","mA","lC","hit","fn","thisp","walker","tail","forEachStep","toArray","_this3","isStale","now","h","len","del","item","Entry","unshift","node","arr","l","expiresAt","_this4","doUse","unshiftNode","removeNode","_regeneratorRuntime","iterator","mark","_callee","wrap","_context","stop","insert","inserted","Node","pushNode","forEachReverse","getReverse","mapReverse","initial","reduceReverse","toArrayReverse","sliceReverse","splice","start","deleteCount","reverse"],"sourceRoot":""}